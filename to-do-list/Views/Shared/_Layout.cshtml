@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<!DOCTYPE html>
<html lang="bg">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - to_do_list</title>

    <!-- Bootstrap (основа) -->
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />

    <!-- Твоят базов стил -->
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/to_do_list.styles.css" asp-append-version="true" />

    <!-- Тема: по подразбиране се зарежда dark; JS долу ще подмени спрямо localStorage -->
    <link id="themeStylesheet" rel="stylesheet" href="~/css/site.css" />

    <!-- Bootstrap Icons -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">
</head>

<body>
    <header>
        <nav id="mainNavbar" class="navbar navbar-expand-sm shadow-sm border-bottom bg-white">
            <div class="container-fluid">
                <a class="navbar-brand fw-bold text-nav" asp-controller="Home" asp-action="Index">
                    <i class="bi bi-check2-square me-1"></i> TaskerMaster
                </a>

                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse">
                    <span class="navbar-toggler-icon"></span>
                </button>

                <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                    <ul class="navbar-nav flex-grow-1 gap-2">
                        <li class="nav-item">
                            <a class="nav-link text-nav @(ViewContext.RouteData.Values["controller"]?.ToString() == "Home" ? "fw-bold border-bottom border-primary" : "")"
                               asp-controller="Home" asp-action="Index">
                                <i class="bi bi-house-door me-1"></i> Начало
                            </a>
                        </li>

                        <li class="nav-item">
                            <a class="nav-link text-nav @(ViewContext.RouteData.Values["controller"]?.ToString() == "Tasks" ? "fw-bold border-bottom border-success" : "")"
                               asp-controller="Tasks" asp-action="Index">
                                <i class="bi bi-list-check me-1"></i> Моите задачи
                            </a>
                        </li>

                        <li class="nav-item dropdown">
                            <a class="nav-link dropdown-toggle text-nav" href="#" id="categoryDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                <i class="bi bi-tags me-1"></i> Категории
                            </a>
                            <ul class="dropdown-menu" id="navDropdownMenu">
                                <li>
                                    <a class="dropdown-item" asp-controller="Categories" asp-action="Index">
                                        <i class="bi bi-folder-fill me-1"></i> Всички категории
                                    </a>
                                </li>
                                <li><hr class="dropdown-divider" /></li>
                                @if (ViewData["Categories"] is IEnumerable<to_do_list.Models.Category> allCategories)
                                {
                                    foreach (var cat in allCategories)
                                    {
                                        <li>
                                            <a class="dropdown-item" asp-controller="Tasks" asp-action="Index" asp-route-categoryId="@cat.Id">
                                                <i class="bi bi-tag me-1"></i> @cat.Name
                                            </a>
                                        </li>
                                    }
                                }
                            </ul>
                        </li>

                        @if (SignInManager.IsSignedIn(User) && User.IsInRole("Admin"))
                        {
                            <li class="nav-item">
                                <a class="nav-link text-nav fw-bold @(ViewContext.RouteData.Values["controller"]?.ToString() == "Admin" ? "border-bottom border-danger" : "")"
                                   asp-controller="Admin" asp-action="Dashboard">
                                    <i class="bi bi-shield-lock-fill me-1"></i> Админ табло
                                </a>
                            </li>
                        }

                        <!-- Theme toggle -->
                        <li class="nav-item d-flex align-items-center ms-3">
                            <i class="bi bi-sun-fill me-1"></i>
                            <div class="form-check form-switch m-0">
                                <input class="form-check-input" type="checkbox" id="themeToggle" />
                            </div>
                            <i class="bi bi-moon-fill ms-1"></i>
                        </li>
                    </ul>

                    <partial name="_LoginPartial" />
                </div>
            </div>
        </nav>
    </header>

    <div class="container">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    <footer class="border-top footer text-muted mt-3">
        <div class="container">
            &copy; 2025 - to_do_list - <a asp-controller="Home" asp-action="Privacy">Privacy</a>
        </div>
    </footer>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

    @RenderSection("Scripts", required: false)

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const themeToggle = document.getElementById("themeToggle");
            const themeLink = document.getElementById("themeStylesheet");
            const navbar = document.getElementById("mainNavbar");
            const navLinks = document.querySelectorAll(".text-nav");
            const dropdown = document.getElementById("navDropdownMenu");

            function applyNavFor(theme) {
                if (theme === "dark") {
                    navbar.classList.remove("bg-white");
                    navbar.classList.add("bg-dark");
                    navLinks.forEach(l => { l.classList.remove("text-dark"); l.classList.add("text-white"); });
                    // тъмно dropdown меню
                    dropdown.classList.add("dropdown-menu-dark");
                } else {
                    navbar.classList.remove("bg-dark");
                    navbar.classList.add("bg-white");
                    navLinks.forEach(l => { l.classList.remove("text-white"); l.classList.add("text-dark"); });
                    dropdown.classList.remove("dropdown-menu-dark");
                }
            }

            function setTheme(theme) {
                themeLink.href = `/css/${theme}-theme.css`;
                localStorage.setItem("theme", theme);
                applyNavFor(theme);
            }

            const saved = localStorage.getItem("theme") || "light";
            themeToggle.checked = saved === "dark";
            setTheme(saved);

            themeToggle.addEventListener("change", () => {
                setTheme(themeToggle.checked ? "dark" : "light");
            });
        });
    </script>

</body>
</html>
